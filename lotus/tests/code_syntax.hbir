target {
  tile t[4][4] {
    memory m[10] {
      size : 10,
      width : 10
    }
  }
}

config {
  arrange t(grid_rows, grid_cols) as {
    group top_half(th_rows, th_cols) at (0 : grid_rows/2, 0 : grid_cols) {
      group[i in th_rows] row(x, cols) at (i, 0 : th_cols) {
        group[j in cols] col at (0, j)
      }
    }
    group bot_half(bh_rows, bh_cols) at (grid_rows/2 : grid_rows, 0 : grid_cols) {
      group[i in bh_rows] row(x, cols) at (i, 0 : bh_cols) {
        group[j in cols] col at (0, j)
      }
    }
  }
}

data {
}

code {
  extern vv_add(a: float*, b: float*, length: int): float*;

  t.top_half.row[x].col[y] {
    ` printf("top_half(row, col) = (%d, %d)", x, y); `
  }

  t.bot_half.row[x].col[y] {
    ` printf("bot_half(row, col) = (%d, %d)", x, y); `
  }

}
